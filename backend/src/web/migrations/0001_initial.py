# Generated by Django 4.2 on 2023-05-13 13:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import web.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('admin', 'Администратор'), ('staff', 'Сотрудник'), ('user', 'Пользователь')], default='user', max_length=15)),
                ('name', models.CharField(max_length=512, null=True, verbose_name='ФИ')),
                ('city', models.CharField(max_length=255, null=True, verbose_name='Город проживания')),
                ('gender', models.CharField(blank=True, max_length=1, null=True, verbose_name='Пол')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, default='profiles/default_user.png', null=True, upload_to='profiles/', verbose_name='Фотография')),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
            managers=[
                ('objects', web.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=500, verbose_name='Название группы')),
                ('city', models.CharField(max_length=255, verbose_name='Город')),
                ('description', models.TextField(verbose_name='Описание')),
                ('categories', models.ManyToManyField(to='web.category', verbose_name='Категории')),
            ],
            options={
                'verbose_name': 'группа',
                'verbose_name_plural': 'группы',
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=500, verbose_name='Название встречи')),
                ('location', models.CharField(blank=True, max_length=255, null=True, verbose_name='Место встречи')),
                ('description', models.TextField(verbose_name='Описание')),
                ('is_online', models.BooleanField(default=False)),
                ('date', models.DateTimeField(verbose_name='Дата проведения')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.group')),
            ],
            options={
                'verbose_name': 'встреча',
                'verbose_name_plural': 'встречи',
            },
        ),
        migrations.CreateModel(
            name='MeetingParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Администратор'), ('participant', 'Участник')], max_length=50)),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.meeting')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'meeting')},
            },
        ),
        migrations.AddField(
            model_name='meeting',
            name='users',
            field=models.ManyToManyField(through='web.MeetingParticipant', to=settings.AUTH_USER_MODEL, verbose_name='Пользователи'),
        ),
        migrations.CreateModel(
            name='GroupParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Администратор'), ('participant', 'Участник')], max_length=50)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'group')},
            },
        ),
        migrations.AddField(
            model_name='group',
            name='users',
            field=models.ManyToManyField(through='web.GroupParticipant', to=settings.AUTH_USER_MODEL, verbose_name='Пользователи'),
        ),
    ]
